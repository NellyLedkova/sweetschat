
#include <cassert>
#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;


string Massiv()
{
    setlocale(LC_ALL, "ru");
    char mas[102];//массив, состоящий из 102 символов 
    int i, uid, max, k, l;//целочисленные переменные:i для использования в цикле,max-самое длинное слово,uid-индекс начала max,
  //k-счетчик для подсчета букв в слове,l-значение длины строки
    string w;
    printf("Введите строку: ");//на экран выводится значение в скобках
    fgets(mas, 102, stdin);//в массив s записывается кол-во строк, не превышающее 102, в поток stdin
    l = strlen(mas);//переменной l присваивается значение длины введенной строки в массиве s
    printf("Вы ввели: ");//на экран выводится значение в скобках
    puts(mas);//значение введенной в массив строки выводится на экран
    max = 0;//длинное слово приравнивается к нулю
    uid = 0;//индекс начала длинного слова приравнивается к нулю
    k = 0;//счетчик для подсчета букв самого длинного слова приравнивается к нулю
    for (i = 0; i < l; i++)//цикл со счетчиком,повторяющийся количество раз, равное длине введенной строки
        if (mas[i] != ' ')//если символ в строке не пробел, то
            k = k + 1;//счетчик для подсчета букв в слове увеличивается на 1
        else//если условие не выполняется
        {

            if (k > max)//если значение счетчика  для подсчета букв в слове больше значения предполагаемо "измеренного" самого длинного слова
            {
                max = k;//значение самого длинного слова становится равным значению счетчика
                uid = i - k;//индекс начала самого длинного слова вычисляется как разность между текущим индексом и количеством букв в самом длинном слове
            }
            k = 0;//значение счетчика для подсчета количества букв в самом длинном слове обнуляется 
        }
    //Код с начала  36 и до 40 строчки выполняется с целью проверки значения самого длинного слова, обнаруженного в строчках с 21 до 33,поскольку в данных
   //строчках проверялась строка без учета пробела и каких-либо других символов, включая точку.Поэтому повторная проверка необходима
    if (k > max)
    {
        max = k;
        uid = i - k;
    }
    max += uid;//к значению самого длинного слова прибавляется значение индекса самого длинного слова
    printf("Самое длинное слово в введенной строке: ");//на экран выводится значение в скобках
    for (i = uid; i < max; i++)//цикл со счетчиком,повторяющийся количество раз, равное разности значения самого длинного слова и его индекса
    {
        putchar(mas[i]);//на экран выводятся буквы, начиная с индекса самого длинного слова, и заканчивая его длиной
        w = mas[i];
    }
    printf("\n");
    return w;
}
int Mass(char mas[102])
{
    int i, uid, max, k, l,q;//целочисленные переменные:i для использования в цикле,max-самое длинное слово,uid-индекс начала max,
  //k-счетчик для подсчета букв в слове,l-значение длины строки
    string w;
    l = strlen(mas);//переменной l присваивается значение длины введенной строки в массиве s
    max = 0;//длинное слово приравнивается к нулю
    uid = 0;//индекс начала длинного слова приравнивается к нулю
    k = 0;//счетчик для подсчета букв самого длинного слова приравнивается к нулю
    q = 0;
    for (i = 0; i < l; i++)//цикл со счетчиком,повторяющийся количество раз, равное длине введенной строки
        if (mas[i] != ' ')//если символ в строке не пробел, то
            k = k + 1;//счетчик для подсчета букв в слове увеличивается на 1
        else//если условие не выполняется
        {

            if (k > max)//если значение счетчика  для подсчета букв в слове больше значения предполагаемо "измеренного" самого длинного слова
            {
                max = k;//значение самого длинного слова становится равным значению счетчика
                uid = i - k;//индекс начала самого длинного слова вычисляется как разность между текущим индексом и количеством букв в самом длинном слове
            }
            k = 0;//значение счетчика для подсчета количества букв в самом длинном слове обнуляется 
        }
    //Код с начала  36 и до 40 строчки выполняется с целью проверки значения самого длинного слова, обнаруженного в строчках с 21 до 33,поскольку в данных
   //строчках проверялась строка без учета пробела и каких-либо других символов, включая точку.Поэтому повторная проверка необходима
    if (k > max)
    {
        max = k;
        uid = i - k;
    }
    max += uid;//к значению самого длинного слова прибавляется значение индекса самого длинного слова
    for (i = uid; i < max; i++)//цикл со счетчиком,повторяющийся количество раз, равное разности значения самого длинного слова и его индекса
    {
        w = mas[i];
        q = q + 1;
    }
    return q;
}

int main()
{
    setlocale(LC_ALL, "ru");
    Massiv();
    printf("Операция прошла успешно\n");
    system("pause");
    return 0;

}